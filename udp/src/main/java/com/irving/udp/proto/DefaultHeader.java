// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Header.proto

package com.irving.udp.proto;

public final class DefaultHeader {
  private DefaultHeader() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   *协议类型枚举
   * </pre>
   *
   * Protobuf enum {@code irving.ProtoType}
   */
  public enum ProtoType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 心跳包
     * </pre>
     *
     * <code>HEART = 0;</code>
     */
    HEART(0),
    /**
     * <pre>
     * 权限认证包
     * </pre>
     *
     * <code>AUTH = 1;</code>
     */
    AUTH(1),
    /**
     * <pre>
     * 普通数据包
     * </pre>
     *
     * <code>DATA = 2;</code>
     */
    DATA(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 心跳包
     * </pre>
     *
     * <code>HEART = 0;</code>
     */
    public static final int HEART_VALUE = 0;
    /**
     * <pre>
     * 权限认证包
     * </pre>
     *
     * <code>AUTH = 1;</code>
     */
    public static final int AUTH_VALUE = 1;
    /**
     * <pre>
     * 普通数据包
     * </pre>
     *
     * <code>DATA = 2;</code>
     */
    public static final int DATA_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ProtoType valueOf(int value) {
      return forNumber(value);
    }

    public static ProtoType forNumber(int value) {
      switch (value) {
        case 0: return HEART;
        case 1: return AUTH;
        case 2: return DATA;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ProtoType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ProtoType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ProtoType>() {
            public ProtoType findValueByNumber(int number) {
              return ProtoType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.irving.udp.proto.DefaultHeader.getDescriptor().getEnumTypes().get(0);
    }

    private static final ProtoType[] VALUES = values();

    public static ProtoType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ProtoType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:irving.ProtoType)
  }

  public interface HeaderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:irving.Header)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 序列号
     * </pre>
     *
     * <code>optional int64 sn = 1;</code>
     */
    long getSn();

    /**
     * <pre>
     * 确认号
     * </pre>
     *
     * <code>optional int64 ack = 2;</code>
     */
    long getAck();

    /**
     * <pre>
     * 校验位段
     * </pre>
     *
     * <code>optional sfixed32 ackbits = 3;</code>
     */
    int getAckbits();

    /**
     * <pre>
     * 协议类型
     * </pre>
     *
     * <code>optional .irving.ProtoType pt = 4;</code>
     */
    int getPtValue();
    /**
     * <pre>
     * 协议类型
     * </pre>
     *
     * <code>optional .irving.ProtoType pt = 4;</code>
     */
    com.irving.udp.proto.DefaultHeader.ProtoType getPt();
  }
  /**
   * Protobuf type {@code irving.Header}
   */
  public  static final class Header extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:irving.Header)
      HeaderOrBuilder {
    // Use Header.newBuilder() to construct.
    private Header(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Header() {
      sn_ = 0L;
      ack_ = 0L;
      ackbits_ = 0;
      pt_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Header(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              sn_ = input.readInt64();
              break;
            }
            case 16: {

              ack_ = input.readInt64();
              break;
            }
            case 29: {

              ackbits_ = input.readSFixed32();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();

              pt_ = rawValue;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.irving.udp.proto.DefaultHeader.internal_static_irving_Header_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.irving.udp.proto.DefaultHeader.internal_static_irving_Header_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.irving.udp.proto.DefaultHeader.Header.class, com.irving.udp.proto.DefaultHeader.Header.Builder.class);
    }

    public static final int SN_FIELD_NUMBER = 1;
    private long sn_;
    /**
     * <pre>
     * 序列号
     * </pre>
     *
     * <code>optional int64 sn = 1;</code>
     */
    public long getSn() {
      return sn_;
    }

    public static final int ACK_FIELD_NUMBER = 2;
    private long ack_;
    /**
     * <pre>
     * 确认号
     * </pre>
     *
     * <code>optional int64 ack = 2;</code>
     */
    public long getAck() {
      return ack_;
    }

    public static final int ACKBITS_FIELD_NUMBER = 3;
    private int ackbits_;
    /**
     * <pre>
     * 校验位段
     * </pre>
     *
     * <code>optional sfixed32 ackbits = 3;</code>
     */
    public int getAckbits() {
      return ackbits_;
    }

    public static final int PT_FIELD_NUMBER = 4;
    private int pt_;
    /**
     * <pre>
     * 协议类型
     * </pre>
     *
     * <code>optional .irving.ProtoType pt = 4;</code>
     */
    public int getPtValue() {
      return pt_;
    }
    /**
     * <pre>
     * 协议类型
     * </pre>
     *
     * <code>optional .irving.ProtoType pt = 4;</code>
     */
    public com.irving.udp.proto.DefaultHeader.ProtoType getPt() {
      com.irving.udp.proto.DefaultHeader.ProtoType result = com.irving.udp.proto.DefaultHeader.ProtoType.valueOf(pt_);
      return result == null ? com.irving.udp.proto.DefaultHeader.ProtoType.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (sn_ != 0L) {
        output.writeInt64(1, sn_);
      }
      if (ack_ != 0L) {
        output.writeInt64(2, ack_);
      }
      if (ackbits_ != 0) {
        output.writeSFixed32(3, ackbits_);
      }
      if (pt_ != com.irving.udp.proto.DefaultHeader.ProtoType.HEART.getNumber()) {
        output.writeEnum(4, pt_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (sn_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, sn_);
      }
      if (ack_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, ack_);
      }
      if (ackbits_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(3, ackbits_);
      }
      if (pt_ != com.irving.udp.proto.DefaultHeader.ProtoType.HEART.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, pt_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.irving.udp.proto.DefaultHeader.Header)) {
        return super.equals(obj);
      }
      com.irving.udp.proto.DefaultHeader.Header other = (com.irving.udp.proto.DefaultHeader.Header) obj;

      boolean result = true;
      result = result && (getSn()
          == other.getSn());
      result = result && (getAck()
          == other.getAck());
      result = result && (getAckbits()
          == other.getAckbits());
      result = result && pt_ == other.pt_;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + SN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSn());
      hash = (37 * hash) + ACK_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAck());
      hash = (37 * hash) + ACKBITS_FIELD_NUMBER;
      hash = (53 * hash) + getAckbits();
      hash = (37 * hash) + PT_FIELD_NUMBER;
      hash = (53 * hash) + pt_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.irving.udp.proto.DefaultHeader.Header parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.irving.udp.proto.DefaultHeader.Header parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.irving.udp.proto.DefaultHeader.Header parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.irving.udp.proto.DefaultHeader.Header parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.irving.udp.proto.DefaultHeader.Header parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.irving.udp.proto.DefaultHeader.Header parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.irving.udp.proto.DefaultHeader.Header parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.irving.udp.proto.DefaultHeader.Header parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.irving.udp.proto.DefaultHeader.Header parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.irving.udp.proto.DefaultHeader.Header parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.irving.udp.proto.DefaultHeader.Header prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code irving.Header}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:irving.Header)
        com.irving.udp.proto.DefaultHeader.HeaderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.irving.udp.proto.DefaultHeader.internal_static_irving_Header_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.irving.udp.proto.DefaultHeader.internal_static_irving_Header_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.irving.udp.proto.DefaultHeader.Header.class, com.irving.udp.proto.DefaultHeader.Header.Builder.class);
      }

      // Construct using com.irving.udp.proto.DefaultHeader.Header.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        sn_ = 0L;

        ack_ = 0L;

        ackbits_ = 0;

        pt_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.irving.udp.proto.DefaultHeader.internal_static_irving_Header_descriptor;
      }

      public com.irving.udp.proto.DefaultHeader.Header getDefaultInstanceForType() {
        return com.irving.udp.proto.DefaultHeader.Header.getDefaultInstance();
      }

      public com.irving.udp.proto.DefaultHeader.Header build() {
        com.irving.udp.proto.DefaultHeader.Header result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.irving.udp.proto.DefaultHeader.Header buildPartial() {
        com.irving.udp.proto.DefaultHeader.Header result = new com.irving.udp.proto.DefaultHeader.Header(this);
        result.sn_ = sn_;
        result.ack_ = ack_;
        result.ackbits_ = ackbits_;
        result.pt_ = pt_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.irving.udp.proto.DefaultHeader.Header) {
          return mergeFrom((com.irving.udp.proto.DefaultHeader.Header)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.irving.udp.proto.DefaultHeader.Header other) {
        if (other == com.irving.udp.proto.DefaultHeader.Header.getDefaultInstance()) return this;
        if (other.getSn() != 0L) {
          setSn(other.getSn());
        }
        if (other.getAck() != 0L) {
          setAck(other.getAck());
        }
        if (other.getAckbits() != 0) {
          setAckbits(other.getAckbits());
        }
        if (other.pt_ != 0) {
          setPtValue(other.getPtValue());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.irving.udp.proto.DefaultHeader.Header parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.irving.udp.proto.DefaultHeader.Header) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long sn_ ;
      /**
       * <pre>
       * 序列号
       * </pre>
       *
       * <code>optional int64 sn = 1;</code>
       */
      public long getSn() {
        return sn_;
      }
      /**
       * <pre>
       * 序列号
       * </pre>
       *
       * <code>optional int64 sn = 1;</code>
       */
      public Builder setSn(long value) {
        
        sn_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 序列号
       * </pre>
       *
       * <code>optional int64 sn = 1;</code>
       */
      public Builder clearSn() {
        
        sn_ = 0L;
        onChanged();
        return this;
      }

      private long ack_ ;
      /**
       * <pre>
       * 确认号
       * </pre>
       *
       * <code>optional int64 ack = 2;</code>
       */
      public long getAck() {
        return ack_;
      }
      /**
       * <pre>
       * 确认号
       * </pre>
       *
       * <code>optional int64 ack = 2;</code>
       */
      public Builder setAck(long value) {
        
        ack_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 确认号
       * </pre>
       *
       * <code>optional int64 ack = 2;</code>
       */
      public Builder clearAck() {
        
        ack_ = 0L;
        onChanged();
        return this;
      }

      private int ackbits_ ;
      /**
       * <pre>
       * 校验位段
       * </pre>
       *
       * <code>optional sfixed32 ackbits = 3;</code>
       */
      public int getAckbits() {
        return ackbits_;
      }
      /**
       * <pre>
       * 校验位段
       * </pre>
       *
       * <code>optional sfixed32 ackbits = 3;</code>
       */
      public Builder setAckbits(int value) {
        
        ackbits_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 校验位段
       * </pre>
       *
       * <code>optional sfixed32 ackbits = 3;</code>
       */
      public Builder clearAckbits() {
        
        ackbits_ = 0;
        onChanged();
        return this;
      }

      private int pt_ = 0;
      /**
       * <pre>
       * 协议类型
       * </pre>
       *
       * <code>optional .irving.ProtoType pt = 4;</code>
       */
      public int getPtValue() {
        return pt_;
      }
      /**
       * <pre>
       * 协议类型
       * </pre>
       *
       * <code>optional .irving.ProtoType pt = 4;</code>
       */
      public Builder setPtValue(int value) {
        pt_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 协议类型
       * </pre>
       *
       * <code>optional .irving.ProtoType pt = 4;</code>
       */
      public com.irving.udp.proto.DefaultHeader.ProtoType getPt() {
        com.irving.udp.proto.DefaultHeader.ProtoType result = com.irving.udp.proto.DefaultHeader.ProtoType.valueOf(pt_);
        return result == null ? com.irving.udp.proto.DefaultHeader.ProtoType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * 协议类型
       * </pre>
       *
       * <code>optional .irving.ProtoType pt = 4;</code>
       */
      public Builder setPt(com.irving.udp.proto.DefaultHeader.ProtoType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        pt_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 协议类型
       * </pre>
       *
       * <code>optional .irving.ProtoType pt = 4;</code>
       */
      public Builder clearPt() {
        
        pt_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:irving.Header)
    }

    // @@protoc_insertion_point(class_scope:irving.Header)
    private static final com.irving.udp.proto.DefaultHeader.Header DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.irving.udp.proto.DefaultHeader.Header();
    }

    public static com.irving.udp.proto.DefaultHeader.Header getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Header>
        PARSER = new com.google.protobuf.AbstractParser<Header>() {
      public Header parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Header(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Header> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Header> getParserForType() {
      return PARSER;
    }

    public com.irving.udp.proto.DefaultHeader.Header getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_irving_Header_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_irving_Header_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014Header.proto\022\006irving\"Q\n\006Header\022\n\n\002sn\030\001" +
      " \001(\003\022\013\n\003ack\030\002 \001(\003\022\017\n\007ackbits\030\003 \001(\017\022\035\n\002pt" +
      "\030\004 \001(\0162\021.irving.ProtoType**\n\tProtoType\022\t" +
      "\n\005HEART\020\000\022\010\n\004AUTH\020\001\022\010\n\004DATA\020\002B%\n\024com.irv" +
      "ing.udp.protoB\rDefaultHeaderb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_irving_Header_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_irving_Header_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_irving_Header_descriptor,
        new java.lang.String[] { "Sn", "Ack", "Ackbits", "Pt", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
